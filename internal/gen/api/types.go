// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.12.3 DO NOT EDIT.
package api

import (
	"time"
)

const (
	BasicAuthScopes = "basicAuth.Scopes"
)

// Defines values for StatusMessageSeverity.
const (
	StatusMessageSeverityError   StatusMessageSeverity = "error"
	StatusMessageSeverityInfo    StatusMessageSeverity = "info"
	StatusMessageSeverityWarning StatusMessageSeverity = "warning"
)

// Defines values for GetCertificateDomainParamsFormat.
const (
	Ca   GetCertificateDomainParamsFormat = "ca"
	Crt  GetCertificateDomainParamsFormat = "crt"
	Json GetCertificateDomainParamsFormat = "json"
	Key  GetCertificateDomainParamsFormat = "key"
	Pem  GetCertificateDomainParamsFormat = "pem"
)

// Certificate This is a single certificate for consuming on clients
type Certificate struct {
	// Authority The certificate authority for the certificate
	Authority string `json:"authority"`

	// Crt The certificate for the certificate
	Crt string `json:"crt"`

	// Domain The domain for which the certificate is issued
	Domain string `json:"domain"`

	// Key The private key for the certificate
	Key string `json:"key"`
}

// Info defines model for Info.
type Info struct {
	// BasicAuth Whether basic auth is enabled
	BasicAuth bool `json:"basicAuth"`

	// Version The version of the cert-manager-selfservice
	Version string `json:"version"`
}

// Status defines model for Status.
type Status struct {
	// Certificates This is a overview of all certificates status
	Certificates StatusCertificates `json:"certificates"`

	// Messages This are event messages produced by the cert-manager-selfservice
	Messages []StatusMessage `json:"messages"`
}

// StatusCertificates This is a overview of all certificates status
type StatusCertificates struct {
	Failed  int `json:"failed"`
	Pending int `json:"pending"`
	Ready   int `json:"ready"`
	Total   int `json:"total"`
	Unknown int `json:"unknown"`
}

// StatusMessage defines model for StatusMessage.
type StatusMessage struct {
	Message  string                `json:"message"`
	Severity StatusMessageSeverity `json:"severity"`
	Time     time.Time             `json:"time"`
}

// StatusMessageSeverity defines model for StatusMessage.Severity.
type StatusMessageSeverity string

// GetCertificateDomainParams defines parameters for GetCertificateDomain.
type GetCertificateDomainParams struct {
	// Format Format of the result, defaults to json
	Format *GetCertificateDomainParamsFormat `form:"format,omitempty" json:"format,omitempty"`
}

// GetCertificateDomainParamsFormat defines parameters for GetCertificateDomain.
type GetCertificateDomainParamsFormat string
